services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - .backend.env
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - '5556:80'
    depends_on:
      - backend
    restart: always
    networks:
      - app-network

  db:
    image: postgres:15
    env_file:
      - .db.env
    volumes:
      - postgres_data:/var/lib/postgresql-15/data
    ports:
      - '5555:5555'
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  db-backup:
    build:
      context: .
      dockerfile: ./db-backup/Dockerfile
    env_file:
      - .db.env
    volumes:
      - ./db-backup/backups:/backups
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
